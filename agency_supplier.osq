/****************************************************************************/
/*  Frame  - Agency Supplier Maintenance                                    */
/*  Author - Simon Haywood                                                  */
/*                                                                          */
/*  Date   - 17.05.07                                                       */
/*  Type   - Online Frame                                                   */
/*                                                                          */
/*  Source - agency_supplier.osq                                            */
/*  Form   - agency_supplier                                                */
/*                                                                          */
/*  Parameters expected - None.                                             */
/*                                                                          */
/****************************************************************************/
/*  Version | Date     | Coded | Description of changes made                */
/***********|**********|*******|*********************************************/
/*  1.1     | 08.06.07 | PT    | Add delivery_note_reqd and claim_return_fee*/
/***********|**********|*******|*********************************************/
initialize() =
DECLARE
		h_rows		= INTEGER4 NOT NULL WITH DEFAULT;
		pi_retval	= INTEGER4 NOT NULL WITH DEFAULT;
		pc_char		= CHAR(1)  NOT NULL WITH DEFAULT;
		IIint	    = INTEGER4 NOT NULL WITH DEFAULT;
    iitf.delivery_note_reqd  = INTEGER4 NOT NULL WITH DEFAULT;
    iitf.claim_return_fee    = INTEGER4 NOT NULL WITH DEFAULT;

    get_details = PROCEDURE RETURNING INTEGER NOT NULL;
BEGIN

	SET_FORMS FRS(TIMEOUT = :gc_timeout);

  SET_FORMS FRS (ACTIVATE(previousfield) = 1);

  SET_FORMS FRS(MAP(FRSKEY1)='pf1');
  SET_FORMS FRS(LABEL(FRSKEY1)='F1');
  SET_FORMS FRS(MAP(FRSKEY7)='pf3');
  SET_FORMS FRS(LABEL(FRSKEY7)='F3');
  SET_FORMS FRS(MAP(FRSKEY8)='pf4');
  SET_FORMS FRS(LABEL(FRSKEY8)='F4');
  SET_FORMS FRS(MAP(FRSKEY9)='pf5');
  SET_FORMS FRS(LABEL(FRSKEY9)='F5');
  SET_FORMS FRS(MAP(FRSKEY14)='pf6');
  SET_FORMS FRS(LABEL(FRSKEY14)='F6');
  SET_FORMS FRS(MAP(FRSKEY11)='pf7');
  SET_FORMS FRS(LABEL(FRSKEY11)='F7');
  SET_FORMS FRS(MAP(FRSKEY12)='pf8');
  SET_FORMS FRS(LABEL(FRSKEY12)='F8');
  SET_FORMS FRS(MAP(FRSKEY13)='pf9');
  SET_FORMS FRS(LABEL(FRSKEY13)='F9');
  SET_FORMS FRS(MAP(FRSKEY10)='pf10');
  SET_FORMS FRS(LABEL(FRSKEY10)='F10');
  SET_FORMS FRS(MAP(FRSKEY4)='pf11');
  SET_FORMS FRS(LABEL(FRSKEY4)='F11');
  SET_FORMS FRS(MAP(FRSKEY3)='pf12');
  SET_FORMS FRS(LABEL(FRSKEY3)='F12');
  SET_FORMS FRS(MAP(menu10)='pf22');
  SET_FORMS FRS(LABEL(menu10)='Alt&F3');
  SET_FORMS FRS(MAP(FRSKEY28)='pf17');
  SET_FORMS FRS(LABEL(FRSKEY28)='End');

  IF gv_user_id = '' 
  THEN
     gv_user_id = 'jt';
  ENDIF;
  IF gv_branch_id = ''
  THEN
     gv_branch_id = '409V';
  ENDIF; 

  CALLPROC update_session_desc(module_name = 'agency_supplier');

  IIint = get_details();
  IF IIint != 0
  THEN
     RETURN;
  ENDIF;
END

ON TIMEOUT =
BEGIN
		CALLPROC timeout_popup();
END

'Insert',KEY frskey11	=
BEGIN
  IIint = CALLFRAME agency_supplier01(
													agency_supplier = 0,
												  supplier_name	= '',
                          delivery_note_reqd = 0,
                          claim_return_fee = 0,
													purpose = 'INSERT'
																				);	

  IIint = get_details();
  IF IIint != 0
  THEN
     RETURN;
  ENDIF;

END

'Update',KEY frskey12	=
BEGIN
  IF g_rows > 0
  THEN
	   IIint = CALLFRAME agency_supplier01(
													  agency_supplier = BYREF(:iitf.agency_supplier),
												    supplier_name	= BYREF(:iitf.supplier_name),
                            delivery_note_reqd = BYREF(iitf.delivery_note_reqd),
                            claim_return_fee = BYREF(iitf.claim_return_fee),
													  purpose = 'UPDATE'
																				);	
     IIint = get_details();
     IF IIint != 0
     THEN
        RETURN;
     ENDIF;
  ELSE
     MESSAGE 'Cusror must be on an agency before using '
           + 'the ' + '''Update''' + ' key' WITH STYLE = POPUP;
     RESUME;
  ENDIF;
END

'Delete',KEY frskey13	=
BEGIN
    IF g_rows = 0
    THEN
       MESSAGE 'Cursor must be on an agency before using '
             + 'the ' + '''Delete''' + ' key' WITH STYLE = POPUP;
       RESUME;
    ENDIF;

		IF :iitf.agency_supplier <= 0
		THEN
				MESSAGE 'Cannot delete this code..!'
								WITH STYLE=POPUP;
				RESUME;
		ENDIF;

		pc_char = PROMPT 'Do you wish to delete ' + X'0A'
										+ VARCHAR(:iitf.agency_supplier) + ' - ' + VARCHAR(:iitf.supplier_name)
										+ ' ?'
										WITH STYLE=POPUP;

		IF UPPERCASE(:pc_char) != 'Y'
		THEN
				RESUME;
		ENDIF;

		MESSAGE 'Deleting..';
		DELETE FROM
			    agency_supplier	
		WHERE
					agency_supplier = :iitf.agency_supplier;
		INQUIRE_INGRES(g_error=ERRORNO,g_rows=ROWCOUNT);

		IF :g_error != 0
		THEN
				MESSAGE 'Error occured deleting :' + VARCHAR(:iitf.agency_supplier)
								WITH STYLE=POPUP;
				RESUME;
		ENDIF;

    DELETE FROM
          agency_supplier_email_group
    WHERE 
          agency_supplier = :iitf.agency_supplier;
		INQUIRE_INGRES(g_error=ERRORNO,g_rows=ROWCOUNT);

		IF :g_error != 0
		THEN
				MESSAGE 'Error occured deleting :' + VARCHAR(:iitf.agency_supplier)
								WITH STYLE=POPUP;
				RESUME;
		ENDIF;

    DELETE FROM
          agency_supplier_email_address
    WHERE 
          agency_supplier = :iitf.agency_supplier;
		INQUIRE_INGRES(g_error=ERRORNO,g_rows=ROWCOUNT);

		IF :g_error != 0
		THEN
				MESSAGE 'Error occured deleting :' + VARCHAR(:iitf.agency_supplier)
								WITH STYLE=POPUP;
				RESUME;
		ENDIF;

    COMMIT;

    IIint = get_details();
    IF IIint != 0
    THEN
       RETURN;
    ENDIF;
END

'Email Groups',KEY frskey10	=
BEGIN
    IIint = CALLFRAME agency_supplier_email_group
                         (agency_supplier = :iitf.agency_supplier,
                          supplier_name   = :iitf.supplier_name);
    IF IIint != 0
    THEN
       RETURN;
    ENDIF;

    IIint = get_details();
    IF IIint != 0
    THEN
       RETURN;
    ENDIF;
    
END

'Exit',KEY frskey3		=
BEGIN
	MESSAGE 'exiting..';
	COMMIT;
	RETURN;
END

PROCEDURE get_details()=
{
	INITTABLE iitf 'READ';

	CLEAR FIELD  iitf; 
  date = DATE('now');

	iitf = 
		SELECT
				agency_supplier,
			  supplier_name,
        delivery_note_reqd,
        claim_return_fee
		FROM 
				agency_supplier;

	INQUIRE_INGRES(g_error=ERRORNO,g_rows=ROWCOUNT,g_err_text=ERRORTEXT);

	IF (g_error != 0)
	THEN
			MESSAGE 'Error occured initializing agency_supplier details..!' + X'0A'
						+ 'Error: ' + VARCHAR(:g_err_text)
							WITH STYLE=POPUP;
			RETURN -1;
	ENDIF;

	IF :g_rows <= 0 
	THEN
			MESSAGE 'No Agency Suppliers present.'
						WITH STYLE=POPUP;
	ENDIF;

  COMMIT;

  RETURN 0;
}
